name: Build and test

on:
  pull_request:
    types:
      - opened
      - synchronize
    # paths-ignore not set intentionally, in order to use fkirc/skip-duplicate-actions action
    # See https://github.com/marketplace/actions/skip-duplicate-actions
  push:
    branches:
      - main
    paths-ignore:
      - '**/.gitignore'
      - '**/LICENSE'
      - '.bumpversion.cfg'
      - '**.md'
      - '.github/workflows/*.yml'
      # re-include current file to not be excluded
      - '!.github/workflows/build.yml'
      # re-include used workflow calls
      - '!.github/workflows/build-workflow-call.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  check_needed:
    continue-on-error: true
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_run.outputs.should_skip }}

    name: Verify if checks are needed
    steps:
      - name: Skip run check
        id: skip_run
        if: github.event_name == 'pull_request'
        uses: fkirc/skip-duplicate-actions@v4
        with:
          paths_ignore: '["**/.gitignore", "**/LICENSE", "**/.bumpversion.cfg", "**.md"]'

  test:
    needs: [check_needed]
    if: ${{ needs.check_needed.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python_version: ['3.7', '3.8', '3.9', '3.10']
    
    name: Test - Python ${{ matrix.python_version }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}
      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Launch tests
        run: tox

  dist:
    needs: [test]
    name: Build sdist/wheel
    uses: ./.github/workflows/build-workflow-call.yml
    with:
      artifact-name: example-dist

  dist_check:
    needs: [dist]
    runs-on: ubuntu-latest
    
    name: Post-build checks
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: '3.7'
      - name: Install dependencies
        run: |
          pip install twine
      - name: Retrieve packages
        uses: actions/download-artifact@v3
        with:
          name: example-dist
          path: dist
      - name: twine check
        run: twine check --strict dist/*
